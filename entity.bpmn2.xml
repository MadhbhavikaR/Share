<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:activiti="http://activiti.org/bpmn"
    targetNamespace="http://www.activiti.org/test">
    <process id="entity" name="Workflow Process" isExecutable="true">

        <!-- Variables -->
        <property id="nextState" name="nextState" />
        <property id="PreDeleteCooldownSeconds" name="PreDeleteCooldownSeconds" />
        <property id="PreProductionCooldownSeconds" name="PreProductionCooldownSeconds" />
        <property id="AutoEscalationTimeInSeconds" name="AutoEscalationTimeInSeconds" />
        <property id="previousState" name="previousState" />

        <!-- Initial Start Event -->
        <startEvent id="StartEvent" name="Start" />
        <sequenceFlow id="flowStartToCreated" sourceRef="StartEvent" targetRef="Created" />

        <!-- Created State -->
        <userTask id="Created" name="Created" />
        <sequenceFlow id="flowCreatedToAssigned" sourceRef="Created" targetRef="Assigned">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'ASSIGNED']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowCreatedToCancelled" sourceRef="Created" targetRef="Cancelled">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'CANCELLED']]></conditionExpression>
        </sequenceFlow>

        <!-- Assigned State -->
        <userTask id="Assigned" name="Assigned" />
        <sequenceFlow id="flowAssignedToEscalated" sourceRef="Assigned" targetRef="Escalated">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'ESCALATED']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowAssignedToApproved" sourceRef="Assigned" targetRef="Approved">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'APPROVED']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowAssignedToDeclined" sourceRef="Assigned" targetRef="Declined">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'DECLINED']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowAssignedToRework" sourceRef="Assigned" targetRef="Rework">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'REWORK']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowAssignedToCancelled" sourceRef="Assigned" targetRef="Cancelled">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'CANCELLED']]></conditionExpression>
        </sequenceFlow>

        <!-- Auto Escalation Timer -->
        <intermediateCatchEvent id="AutoEscalationTimer" name="Auto Escalation Timer">
            <timerEventDefinition>
                <timeDuration xsi:type="tFormalExpression"><![CDATA[PT${AutoEscalationTimeInSeconds}S]]></timeDuration>
            </timerEventDefinition>
        </intermediateCatchEvent>
        <sequenceFlow id="flowAutoEscalationToEscalated" sourceRef="AutoEscalationTimer"
            targetRef="Escalated" />

        <!-- Escalated State -->
        <userTask id="Escalated" name="Escalated" />
        <sequenceFlow id="flowEscalatedToDeescalated" sourceRef="Escalated" targetRef="Deescalated" >
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'DEESCALATED']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowEscalatedToApproved" sourceRef="Escalated" targetRef="Approved" >
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'APPROVED']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowEscalatedToDeclined" sourceRef="Escalated" targetRef="Declined" >
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'DECLINED']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowEscalatedToRework" sourceRef="Escalated" targetRef="Rework" >
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'REWORK']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowEscalatedToCancelled" sourceRef="Escalated" targetRef="Cancelled" >
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'CANCELLED']]></conditionExpression>
        </sequenceFlow>

        <!-- Deescalated State -->
        <userTask id="Deescalated" name="Deescalated" />
        <sequenceFlow id="flowDeescalatedToApproved" sourceRef="Deescalated" targetRef="Approved"  >
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'APPROVED']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowDeescalatedToDeclined" sourceRef="Deescalated" targetRef="Declined"  >
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'DECLINED']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowDeescalatedToRework" sourceRef="Deescalated" targetRef="Rework" 
        >
        <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'REWORK']]></conditionExpression>
    </sequenceFlow>
        <sequenceFlow id="flowDeescalatedToCancelled" sourceRef="Deescalated" targetRef="Cancelled"  >
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'CANCELLED']]></conditionExpression>
        </sequenceFlow>

        <!-- Declined State -->
        <userTask id="Declined" name="Declined" />
        <sequenceFlow id="flowDeclinedToEnd" sourceRef="Declined" targetRef="EndEvent" />

        <!-- Approved State -->
        <userTask id="Approved" name="Approved" />
        <sequenceFlow id="flowApprovedToPreProductionCooldown" sourceRef="Approved"
            targetRef="PreProductionCooldown" />

        <!-- Pre Production Cooldown Timer -->
        <intermediateCatchEvent id="PreProductionCooldownTimer" name="Pre Production Cooldown Timer">
            <timerEventDefinition>
                <timeDuration xsi:type="tFormalExpression"><![CDATA[PT${PreProductionCooldownSeconds}S]]></timeDuration>
            </timerEventDefinition>
        </intermediateCatchEvent>
        <sequenceFlow id="flowPreProductionCooldownToProduction"
            sourceRef="PreProductionCooldownTimer" targetRef="Production" />

        <!-- Pre Production Cooldown State -->
        <userTask id="PreProductionCooldown" name="Pre Production Cooldown" />
        <sequenceFlow id="flowPreProductionCooldownToCancelled" sourceRef="PreProductionCooldown"
            targetRef="Cancelled">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'CANCELLED']]></conditionExpression>
        </sequenceFlow>

        <!-- Production State -->
        <userTask id="Production" name="Production" />
        <sequenceFlow id="flowProductionToCancelled" sourceRef="Production" targetRef="Cancelled" >
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'CANCELLED']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowProductionToEnd" sourceRef="Production" targetRef="EndEvent" /> 

        <!-- Rework State -->
        <userTask id="Rework" name="Rework" />
        <sequenceFlow id="flowReworkToAssigned" sourceRef="Rework" targetRef="Assigned">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'ASSIGNED']]></conditionExpression>
        </sequenceFlow>
        <sequenceFlow id="flowReworkToCancelled" sourceRef="Rework" targetRef="Cancelled"  >
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'CANCELLED']]></conditionExpression>
        </sequenceFlow>

        <!-- Cancelled State -->
        <userTask id="Cancelled" name="Cancelled" />
        <sequenceFlow id="flowCancelledToPreDeleteCooldown" sourceRef="Cancelled"
            targetRef="PreDeleteCooldown" />

        <!-- Pre Delete Cooldown Timer -->
        <intermediateCatchEvent id="PreDeleteCooldownTimer" name="Pre Delete Cooldown Timer">
            <timerEventDefinition>
                <timeDuration xsi:type="tFormalExpression"><![CDATA[PT${PreDeleteCooldownSeconds}S]]></timeDuration>
            </timerEventDefinition>
        </intermediateCatchEvent>
        <sequenceFlow id="flowPreDeleteCooldownToSoftDeleted" sourceRef="PreDeleteCooldownTimer"
            targetRef="SoftDeleted" />

        <!-- Pre Delete Cooldown State -->
        <userTask id="PreDeleteCooldown" name="Pre Delete Cooldown" />
        <sequenceFlow id="flowPreDeleteCooldownToProduction" sourceRef="PreDeleteCooldown"
            targetRef="Production">
            <conditionExpression xsi:type="tFormalExpression"><![CDATA[nextState == 'PRODUCTION' && previousState == 'PRODUCTION']]></conditionExpression>
        </sequenceFlow>

        <!-- Soft Deleted State -->
        <userTask id="SoftDeleted" name="Soft Deleted" />

        <!-- End Event -->
        <endEvent id="EndEvent" />
        <sequenceFlow id="flowSoftDeletedToEnd" sourceRef="SoftDeleted" targetRef="EndEvent" />

    </process>
</definitions>
