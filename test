import org.activiti.engine.*;
import org.activiti.engine.delegate.TaskListener;
import org.activiti.spring.SpringProcessEngineConfiguration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.DependsOn;
import org.springframework.transaction.PlatformTransactionManager;

import javax.sql.DataSource;

@Configuration
public class ActivitiConfig {

    @Autowired
    private CustomTaskListener customTaskListener;

    @Bean
    @DependsOn("dataSource")
    public SpringProcessEngineConfiguration processEngineConfiguration(DataSource dataSource, PlatformTransactionManager transactionManager) {
        SpringProcessEngineConfiguration config = new SpringProcessEngineConfiguration();
        config.setDataSource(dataSource);
        config.setTransactionManager(transactionManager);
        config.setDatabaseSchemaUpdate("true"); // Set true if schema update is allowed
        config.setDatabaseSchema("YOUR_SCHEMA_NAME");

        // Register the TaskListener programmatically
        config.setCustomPostBPMNParseListeners(Collections.singletonList(bpmnParse -> {
            bpmnParse.getBpmnModel().getFlowElements().forEach(flowElement -> {
                if (flowElement instanceof UserTask) {
                    UserTask userTask = (UserTask) flowElement;
                    userTask.addTaskListener(TaskListener.EVENTNAME_CREATE, customTaskListener);
                }
            });
        }));

        return config;
    }

    @Bean
    public ProcessEngine processEngine(SpringProcessEngineConfiguration config) {
        return config.buildProcessEngine();
    }

    @Bean
    public RepositoryService repositoryService(ProcessEngine processEngine) {
        return processEngine.getRepositoryService();
    }

    @Bean
    public RuntimeService runtimeService(ProcessEngine processEngine) {
        return processEngine.getRuntimeService();
    }

    @Bean
    public TaskService taskService(ProcessEngine processEngine) {
        return processEngine.getTaskService();
    }

    @Bean
    public HistoryService historyService(ProcessEngine processEngine) {
        return processEngine.getHistoryService();
    }

    @Bean
    public CustomTaskListener customTaskListener() {
        return new CustomTaskListener();
    }
}
